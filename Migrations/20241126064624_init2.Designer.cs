// <auto-generated />
using System;
using GlobalManagement.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalManagement.Migrations
{
    [DbContext(typeof(GlobalDatabase))]
    [Migration("20241126064624_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlobalManagement.Logging._Log_Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("End")
                        .HasColumnType("time");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("GlobalManagement.Models.AppModel.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Application Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Application Name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("Application");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "10.35.92.163:3001",
                            CreatedAt = new DateTime(2024, 11, 26, 7, 46, 24, 425, DateTimeKind.Local).AddTicks(6615),
                            Description = "Application used to manage other applications and permission",
                            IsActive = true,
                            Name = "GlobalApp",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Uuid = new Guid("108ca102-9d1f-4942-828c-01f2ed7b012b")
                        },
                        new
                        {
                            Id = 2,
                            Address = "10.35.92.163:2999",
                            CreatedAt = new DateTime(2024, 11, 26, 7, 46, 24, 425, DateTimeKind.Local).AddTicks(6675),
                            Description = "Application used to manage reference, ecr, deviation",
                            IsActive = true,
                            Name = "ControlReport",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Uuid = new Guid("1b2112ae-a6e3-4dec-b0e0-d324a55e34e0")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models.AppModel._App.AppOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AppUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("ApplicationOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUuid = new Guid("108ca102-9d1f-4942-828c-01f2ed7b012b"),
                            Uuid = new Guid("ed530d86-1120-41c4-9796-bbf251c2e3e1")
                        },
                        new
                        {
                            Id = 2,
                            AppUuid = new Guid("1b2112ae-a6e3-4dec-b0e0-d324a55e34e0"),
                            Uuid = new Guid("b160f091-6b47-40d8-8510-7e6ff34cc19c")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models.AppModel._App.AppOwners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AppUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("ApplicationOwner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUuid = new Guid("108ca102-9d1f-4942-828c-01f2ed7b012b"),
                            UserUuid = new Guid("69fc3f24-f972-4946-aa96-564703986dbd"),
                            Uuid = new Guid("4f648db1-7ffc-4676-bedb-11ad3dbd8f34")
                        },
                        new
                        {
                            Id = 2,
                            AppUuid = new Guid("1b2112ae-a6e3-4dec-b0e0-d324a55e34e0"),
                            UserUuid = new Guid("1b2112ae-a6e3-4dec-b0e0-d324a55e34e0"),
                            Uuid = new Guid("da8598e6-90ba-47bf-b57b-8ab78142afd4")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models.Groups.GroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("GlobalManagement.Models.Groups.Members.GroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupUUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("GlobalManagement.Models.Groups.Permissions.GroupPermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("UsersCanAccessGlobalApp")
                        .HasColumnType("bit");

                    b.Property<bool>("UsersCanAccessReferenceHub")
                        .HasColumnType("bit");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("GroupPermissions");
                });

            modelBuilder.Entity("GlobalManagement.Models.Groups._Default.GroupRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanAddRoles")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAddUser")
                        .HasColumnType("bit");

                    b.Property<bool>("CanModifyGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanModifyRoles")
                        .HasColumnType("bit");

                    b.Property<bool>("CanModifyUser")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRemoveGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRemoveRoles")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRemoveUser")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoleRemovable")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("GroupRole");
                });

            modelBuilder.Entity("GlobalManagement.Models.Permissions.PermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AppUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserUuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("ApplicationPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppName = "GlobalApp",
                            AppUuid = new Guid("108ca102-9d1f-4942-828c-01f2ed7b012b"),
                            CreatedAt = new DateTime(2024, 11, 26, 7, 46, 24, 576, DateTimeKind.Local).AddTicks(7398),
                            Role = "Administrator",
                            RoleUuid = new Guid("abdb2443-a875-44c5-bc73-2413759a3e87"),
                            UUID = new Guid("46f2ce50-01f6-41b7-9794-9d45297f33fd"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserUuid = new Guid("69fc3f24-f972-4946-aa96-564703986dbd")
                        },
                        new
                        {
                            Id = 2,
                            AppName = "ControlReport",
                            AppUuid = new Guid("1b2112ae-a6e3-4dec-b0e0-d324a55e34e0"),
                            CreatedAt = new DateTime(2024, 11, 26, 7, 46, 24, 576, DateTimeKind.Local).AddTicks(7482),
                            Role = "Administrator",
                            RoleUuid = new Guid("811e1a04-b01f-48eb-8ce0-8630617a126b"),
                            UUID = new Guid("5126dfd3-c488-4460-a05f-4d4c83b18279"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserUuid = new Guid("69fc3f24-f972-4946-aa96-564703986dbd")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models._DefaultModels._Roles._ControlReportRoles.DefaultControlReportRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AppUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanBeEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateEcr")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteEcr")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadEcr")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateEcr")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUseApp")
                        .HasColumnType("bit");

                    b.Property<bool>("HasAllPrivelage")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("ControlReportPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppName = "ControlReport",
                            AppUuid = new Guid("1b2112ae-a6e3-4dec-b0e0-d324a55e34e0"),
                            CanBeEdited = false,
                            CanCreateDeviation = true,
                            CanCreateEcr = true,
                            CanCreateIntervention = true,
                            CanCreateReference = true,
                            CanCreateTask = true,
                            CanDeleteDeviation = false,
                            CanDeleteEcr = true,
                            CanDeleteIntervention = true,
                            CanDeleteReference = true,
                            CanDeleteTask = true,
                            CanReadDeviation = true,
                            CanReadEcr = true,
                            CanReadIntervention = true,
                            CanReadReference = true,
                            CanReadTask = true,
                            CanUpdateDeviation = true,
                            CanUpdateEcr = true,
                            CanUpdateIntervention = true,
                            CanUpdateReference = true,
                            CanUpdateTask = true,
                            CanUseApp = true,
                            HasAllPrivelage = true,
                            RoleName = "Administrator",
                            UUID = new Guid("811e1a04-b01f-48eb-8ce0-8630617a126b")
                        },
                        new
                        {
                            Id = 2,
                            AppName = "ControlReport",
                            AppUuid = new Guid("1b2112ae-a6e3-4dec-b0e0-d324a55e34e0"),
                            CanBeEdited = false,
                            CanCreateDeviation = false,
                            CanCreateEcr = false,
                            CanCreateIntervention = false,
                            CanCreateReference = false,
                            CanCreateTask = false,
                            CanDeleteDeviation = false,
                            CanDeleteEcr = false,
                            CanDeleteIntervention = false,
                            CanDeleteReference = false,
                            CanDeleteTask = false,
                            CanReadDeviation = true,
                            CanReadEcr = true,
                            CanReadIntervention = true,
                            CanReadReference = true,
                            CanReadTask = true,
                            CanUpdateDeviation = false,
                            CanUpdateEcr = false,
                            CanUpdateIntervention = false,
                            CanUpdateReference = false,
                            CanUpdateTask = false,
                            CanUseApp = true,
                            HasAllPrivelage = false,
                            RoleName = "User",
                            UUID = new Guid("c0c99b90-02ab-48a2-ac3d-ea01428be702")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models._DefaultModels._Roles._GlobalRoles.DefaultGlobalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AppUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanAccessGlobal")
                        .HasColumnType("bit");

                    b.Property<bool>("CanBeEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateCustomRole")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateUser")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteCustomRole")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteUser")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UpdateCustomRole")
                        .HasColumnType("bit");

                    b.Property<bool>("UpdateUser")
                        .HasColumnType("bit");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("GlobalPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppName = "GlobalApp",
                            AppUuid = new Guid("108ca102-9d1f-4942-828c-01f2ed7b012b"),
                            CanAccessGlobal = true,
                            CanBeEdited = false,
                            CanCreateGroup = true,
                            CanDeleteGroup = true,
                            CanUpdateGroup = true,
                            CreateCustomRole = true,
                            CreateUser = true,
                            DeleteCustomRole = true,
                            DeleteUser = true,
                            RoleName = "Administrator",
                            UpdateCustomRole = true,
                            UpdateUser = true,
                            Uuid = new Guid("abdb2443-a875-44c5-bc73-2413759a3e87")
                        },
                        new
                        {
                            Id = 2,
                            AppName = "GlobalApp",
                            AppUuid = new Guid("108ca102-9d1f-4942-828c-01f2ed7b012b"),
                            CanAccessGlobal = false,
                            CanBeEdited = false,
                            CanCreateGroup = false,
                            CanDeleteGroup = false,
                            CanUpdateGroup = false,
                            CreateCustomRole = false,
                            CreateUser = false,
                            DeleteCustomRole = false,
                            DeleteUser = false,
                            RoleName = "User",
                            UpdateCustomRole = false,
                            UpdateUser = false,
                            Uuid = new Guid("4d669212-33b0-47e0-ac0e-a842a83f59e0")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models._DefaultModels._User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pin")
                        .HasMaxLength(16)
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Card = "1234",
                            CreatedDate = new DateTime(2024, 11, 26, 7, 46, 24, 425, DateTimeKind.Local).AddTicks(9126),
                            Email = "zyw2.automatyzacja@gmail.com",
                            FirstName = "admin",
                            FullName = "admin admin",
                            IsActive = true,
                            LastName = "admin",
                            Password = "$2a$11$Qhg/NvWoiT783KDklyLWh.1O6XV.CnzQG5yZOcqFdUzFVtxdNVQUq",
                            Pin = 1234,
                            UserName = "admin",
                            Uuid = new Guid("69fc3f24-f972-4946-aa96-564703986dbd")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
