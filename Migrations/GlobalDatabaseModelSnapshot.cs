// <auto-generated />
using System;
using GlobalManagement.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalManagement.Migrations
{
    [DbContext(typeof(GlobalDatabase))]
    partial class GlobalDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlobalManagement.Models.AppModel.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Application Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Application Name");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("Application");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Application used to manage other applications and permission",
                            Name = "GlobalApp",
                            UUID = new Guid("e1460990-542d-4142-8904-3c10d6a9d6e8")
                        },
                        new
                        {
                            Id = 2,
                            Description = "Application used to manage reference, ecr, deviation",
                            Name = "ControlReport",
                            UUID = new Guid("71c1b86a-9a7b-49c3-811d-1663f52ef980")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models.AppModel._App.App_Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("App_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("ApplicationOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            App_UUID = new Guid("e1460990-542d-4142-8904-3c10d6a9d6e8"),
                            UUID = new Guid("33da1720-c465-4da2-8fa7-36705e495402")
                        },
                        new
                        {
                            Id = 2,
                            App_UUID = new Guid("71c1b86a-9a7b-49c3-811d-1663f52ef980"),
                            UUID = new Guid("fd2093b0-4123-4778-932b-4d2599c32a1c")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models.AppModel._App.App_Owners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("App_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("ApplicationOwner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            App_UUID = new Guid("e1460990-542d-4142-8904-3c10d6a9d6e8"),
                            UUID = new Guid("337c6fbe-5e02-4a53-847a-37c0cb9bf298"),
                            User_UUID = new Guid("fc1d498c-746d-4407-b004-394e03756c04")
                        },
                        new
                        {
                            Id = 2,
                            App_UUID = new Guid("71c1b86a-9a7b-49c3-811d-1663f52ef980"),
                            UUID = new Guid("30eb0af9-9724-477c-beb3-43e5d236484a"),
                            User_UUID = new Guid("71c1b86a-9a7b-49c3-811d-1663f52ef980")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models.Permissions.PermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("App_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("App_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("ApplicationPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            App_Name = "GlobalApp",
                            App_UUID = new Guid("e1460990-542d-4142-8904-3c10d6a9d6e8"),
                            Role = "Administrator",
                            Role_UUID = new Guid("13865aae-9987-43f9-96d7-0f5b92c67ba9"),
                            UUID = new Guid("6532f398-fcf2-4c2e-8004-7d25a86161c4"),
                            User_UUID = new Guid("fc1d498c-746d-4407-b004-394e03756c04")
                        },
                        new
                        {
                            Id = 2,
                            App_Name = "ControlReport",
                            App_UUID = new Guid("71c1b86a-9a7b-49c3-811d-1663f52ef980"),
                            Role = "Administrator",
                            Role_UUID = new Guid("f57c5777-e6b3-417d-8358-f38d062a3054"),
                            UUID = new Guid("3a059cc5-2fa7-45e7-a8de-d1bde11b21bf"),
                            User_UUID = new Guid("fc1d498c-746d-4407-b004-394e03756c04")
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models._DefaultModels._Roles._ControlReportRoles._DefaultControlReportRole", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("App_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("App_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanBeEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateECR")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteECR")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadECR")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReadTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateDeviation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateECR")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateIntervention")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateReference")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdateTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUseApp")
                        .HasColumnType("bit");

                    b.Property<bool>("HasAllPrivelage")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UUID");

                    b.ToTable("ControlReportPermissions");

                    b.HasData(
                        new
                        {
                            UUID = new Guid("f57c5777-e6b3-417d-8358-f38d062a3054"),
                            App_Name = "ControlReport",
                            App_UUID = new Guid("71c1b86a-9a7b-49c3-811d-1663f52ef980"),
                            CanBeEdited = false,
                            CanCreateDeviation = true,
                            CanCreateECR = true,
                            CanCreateGroup = true,
                            CanCreateIntervention = true,
                            CanCreateReference = true,
                            CanCreateTask = true,
                            CanDeleteDeviation = false,
                            CanDeleteECR = true,
                            CanDeleteGroup = true,
                            CanDeleteIntervention = true,
                            CanDeleteReference = true,
                            CanDeleteTask = true,
                            CanReadDeviation = true,
                            CanReadECR = true,
                            CanReadGroup = true,
                            CanReadIntervention = true,
                            CanReadReference = true,
                            CanReadTask = true,
                            CanUpdateDeviation = true,
                            CanUpdateECR = true,
                            CanUpdateGroup = true,
                            CanUpdateIntervention = true,
                            CanUpdateReference = true,
                            CanUpdateTask = true,
                            CanUseApp = true,
                            HasAllPrivelage = true,
                            Id = 1,
                            Role_Name = "Administrator"
                        },
                        new
                        {
                            UUID = new Guid("397ede05-aaf9-4cfc-93ed-4a098fd8ae53"),
                            App_Name = "ControlReport",
                            App_UUID = new Guid("71c1b86a-9a7b-49c3-811d-1663f52ef980"),
                            CanBeEdited = false,
                            CanCreateDeviation = false,
                            CanCreateECR = false,
                            CanCreateGroup = false,
                            CanCreateIntervention = false,
                            CanCreateReference = false,
                            CanCreateTask = false,
                            CanDeleteDeviation = false,
                            CanDeleteECR = false,
                            CanDeleteGroup = false,
                            CanDeleteIntervention = false,
                            CanDeleteReference = false,
                            CanDeleteTask = false,
                            CanReadDeviation = true,
                            CanReadECR = true,
                            CanReadGroup = true,
                            CanReadIntervention = true,
                            CanReadReference = true,
                            CanReadTask = true,
                            CanUpdateDeviation = false,
                            CanUpdateECR = false,
                            CanUpdateGroup = false,
                            CanUpdateIntervention = false,
                            CanUpdateReference = false,
                            CanUpdateTask = false,
                            CanUseApp = true,
                            HasAllPrivelage = false,
                            Id = 2,
                            Role_Name = "User"
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models._DefaultModels._Roles._GlobalRoles._DefaultGlobalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("App_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("App_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanAccessGlobal")
                        .HasColumnType("bit");

                    b.Property<bool>("CanBeEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateCustomRole")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateUser")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteCustomRole")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteUser")
                        .HasColumnType("bit");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("UpdateCustomRole")
                        .HasColumnType("bit");

                    b.Property<bool>("UpdateUser")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("GlobalPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            App_Name = "GlobalApp",
                            App_UUID = new Guid("e1460990-542d-4142-8904-3c10d6a9d6e8"),
                            CanAccessGlobal = true,
                            CanBeEdited = false,
                            CreateCustomRole = true,
                            CreateUser = true,
                            DeleteCustomRole = false,
                            DeleteUser = true,
                            Role_Name = "Administrator",
                            UUID = new Guid("13865aae-9987-43f9-96d7-0f5b92c67ba9"),
                            UpdateCustomRole = false,
                            UpdateUser = true
                        },
                        new
                        {
                            Id = 2,
                            App_Name = "GlobalApp",
                            App_UUID = new Guid("e1460990-542d-4142-8904-3c10d6a9d6e8"),
                            CanAccessGlobal = false,
                            CanBeEdited = false,
                            CreateCustomRole = false,
                            CreateUser = false,
                            DeleteCustomRole = false,
                            DeleteUser = false,
                            Role_Name = "User",
                            UUID = new Guid("84b38df9-0e89-4301-bd01-70b5bb8bf52e"),
                            UpdateCustomRole = false,
                            UpdateUser = false
                        });
                });

            modelBuilder.Entity("GlobalManagement.Models._DefaultModels._User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pin")
                        .HasMaxLength(16)
                        .HasColumnType("int");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UUID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Card = "1234",
                            CreatedDate = new DateTime(2024, 10, 25, 18, 59, 30, 928, DateTimeKind.Local).AddTicks(5934),
                            Email = "zyw2.automatyzacja@gmail.com",
                            FirstName = "admin",
                            FullName = "admin admin",
                            IsActive = true,
                            LastName = "admin",
                            Password = "$2a$11$1nRlsCp3dHz2zrGOl4kcDeGMJTUQ/Ei2ea65C/TUIm8IXvPUoBZWG",
                            Pin = 1234,
                            UUID = new Guid("fc1d498c-746d-4407-b004-394e03756c04"),
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
